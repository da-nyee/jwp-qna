package qna.subway.domain;

import org.springframework.lang.NonNull;

import javax.persistence.*;

/*
create table station (
   id bigint generated by default as identity,
   name varchar(255) not null,
   primary key (id)
)
*/
@Table(name = "station")    // 테이블 이름 직접 지정 👉 따로 안하면 클래스명으로 테이블명 설정 O
@Entity                     // 이 클래스를 기반으로 DB table 생성하겠다. 👉 이거 하나면 일단 끝남
// Entity 클래스는 id 필드가 필요함 👉 식별자가 필요함
public class Station {

    // 식별자
    @Id
    // `AUTO`로 두면 vendor 사에 맞춰서 설정함 👉 꽤나 위험한 행동 👉 내가 어떻게 DB가 만들어지는지 모른다는 것 👉 따라서, 다른 타입으로 명시하는 게 좋음
    // `IDENTITY`로 두면 auto_increment O
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    // 필드도 not null
    @NonNull
    // not null 👉 DB scheme 상에서만 not null 지정 👉 필드는 null 될 수 있음
    // nullable = true (default)
    @Column(nullable = false)
    private String name;

    // 기본 생성자가 왜 필요할까? JPA가 사용하는 기술과 관련 O 👉 Java Reflection API 유사 기술을 사용함
    // 즉, 기본 생성자를 통해 인스턴스를 생성하고 -> 여기에 있는 필드 값들을 차례차례 채워나감
    public Station() {
    }

    public Station(String name) {
        this(null, name);
    }

    public Station(Long id, String name) {
        this.id = id;
        this.name = name;
    }
}
